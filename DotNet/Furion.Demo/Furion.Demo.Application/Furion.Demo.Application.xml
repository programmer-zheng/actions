<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Demo.Application</name>
    </assembly>
    <members>
        <member name="F:Furion.Demo.Application.Monitor.Dtos.MonitorEventType.Point">
            <summary>
            测点
            </summary>
        </member>
        <member name="F:Furion.Demo.Application.Monitor.Dtos.MonitorEventType.Alarm">
            <summary>
            报警
            </summary>
        </member>
        <member name="F:Furion.Demo.Application.Monitor.Dtos.MonitorEventType.Station">
            <summary>
            分站
            </summary>
        </member>
        <member name="P:Furion.Demo.Application.Monitor.Dtos.StationMonitorDto.Sno">
            <summary>
            分站号
            </summary>
        </member>
        <member name="P:Furion.Demo.Application.Monitor.Dtos.StationMonitorDto.Model">
            <summary>
            型号
            </summary>
        </member>
        <member name="M:Furion.Demo.Application.Monitor.MonitorAppService.PointChangeAsync">
            <summary>
            测点数据变更
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.Monitor.MonitorAppService.StationChangeAsync">
            <summary>
            分站数据变更
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.Monitor.MonitorAppService.GetPointRealTimeData">
            <summary>
            获取测点实时数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.Monitor.MonitorAppService.GetStationData">
            <summary>
            获取分站数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.Monitor.MonitorAppService.BroadcastMessageAsync(System.String)">
            <summary>
            广播消息到所有连接的客户端
            </summary>
        </member>
        <member name="M:Furion.Demo.Application.Monitor.MonitorAppService.ServerSendEventAsync">
            <summary>
            sse
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.MockAppService.CreateAsync">
            <summary>
            批量生成数据，使用事件总线发布
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.MySqlAppService.TestEnumConvert(Furion.Demo.Application.SqlSugar.CreatePointDto)">
            <summary>
            测试枚举转换
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.MySqlAppService.CreateAsync(System.Collections.Generic.List{Furion.Demo.Application.System.Dtos.CreateTdDataDto})">
            <summary>
            往MySql中插入数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.MySqlAppService.QueryDataAsync(Furion.Demo.Core.Dtos.QueryDataDto)">
            <summary>
            查询MySql中的数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.MySqlAppService.DeleteAsync(System.Collections.Generic.List{System.Int64})">
            <summary>
            删除
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.TdEngineAppservice.CreateAsync(System.Collections.Generic.List{Furion.Demo.Application.System.Dtos.CreateTdDataDto})">
            <summary>
            往TdEngine中插入数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.TdEngineAppservice.CreateRawSqlAsync(System.Collections.Generic.List{Furion.Demo.Application.System.Dtos.CreateTdDataDto})">
            <summary>
            往TdEngine中插入数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.TdEngineAppservice.QueryDataAsync(Furion.Demo.Core.Dtos.QueryDataDto)">
            <summary>
            查询TdEngine中的数据
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.TdEngineAppservice.UpdateHistoryDataAsync">
            <summary>
            覆盖更新历史数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.TdEngineAppservice.QueryAggregateAsync">
            <summary>
            查询聚合数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.Demo.Application.SqlSugar.TdEngineAppservice.QueryAggregateRawSqlAsync">
            <summary>
            原生sql查询聚合数据
            </summary>
            <returns></returns>
        </member>
        <member name="P:Furion.Demo.Application.System.Dtos.CreateTdDataDto.Sno">
            <summary>
            分站号
            </summary>
        </member>
        <member name="P:Furion.Demo.Application.System.Dtos.CreateTdDataDto.PointNumber">
            <summary>
            测点编号
            </summary>
        </member>
        <member name="P:Furion.Demo.Application.System.Dtos.CreateTdDataDto.PointType">
            <summary>
            测点类型
            </summary>
        </member>
        <member name="M:Furion.Demo.Application.System.FurionDemoApiAppService.SayHello">
            <summary>
            打招呼
            </summary>
            <returns></returns>
        </member>
        <member name="T:Furion.Demo.Application.SystemAppService">
            <summary>
            系统服务接口
            </summary>
        </member>
        <member name="M:Furion.Demo.Application.SystemAppService.GetDescription">
            <summary>
            获取系统描述
            </summary>
            <returns></returns>
        </member>
        <member name="T:TouchSocket.Core.GeneratorContainerAttribute">
            <summary>
            源生成容器特性
            </summary>
        </member>
        <member name="P:TouchSocket.Core.BaseInjectAttribute.FromType">
            <summary>
            注册类型
            </summary>
        </member>
        <member name="P:TouchSocket.Core.BaseInjectAttribute.ToType">
            <summary>
            实例类型
            </summary>
        </member>
        <member name="P:TouchSocket.Core.BaseInjectAttribute.Key">
            <summary>
            注册额外键
            </summary>
        </member>
        <member name="T:TouchSocket.Core.AutoInjectForSingletonAttribute">
            <summary>
            自动注入为单例。
            </summary>
        </member>
        <member name="T:TouchSocket.Core.AutoInjectForTransientAttribute">
            <summary>
            自动注入为瞬时。
            </summary>
        </member>
        <member name="T:TouchSocket.Core.AddSingletonInjectAttribute">
            <summary>
            添加单例注入。
            <para>
            该标签仅添加在继承<see cref="T:TouchSocket.Core.ManualContainer"/>的容器上时有用。
            </para>
            </summary>
        </member>
        <member name="M:TouchSocket.Core.AddSingletonInjectAttribute.#ctor(System.Type,System.Type,System.String)">
            <summary>
            添加单例注入。
            <para>
            该标签仅添加在继承<see cref="T:TouchSocket.Core.ManualContainer"/>的容器上时有用。
            </para>
            </summary>
            <param name="fromType">注册类型</param>
            <param name="toType">实例类型</param>
            <param name="key">注册额外键</param>
        </member>
        <member name="M:TouchSocket.Core.AddSingletonInjectAttribute.#ctor(System.Type)">
            <summary>
            添加单例注入。
            <para>
            该标签仅添加在继承<see cref="T:TouchSocket.Core.ManualContainer"/>的容器上时有用。
            </para>
            </summary>
            <param name="type">注册类型与实例类型一致</param>
        </member>
        <member name="M:TouchSocket.Core.AddSingletonInjectAttribute.#ctor(System.Type,System.Type)">
            <summary>
            添加单例注入。
            <para>
            该标签仅添加在继承<see cref="T:TouchSocket.Core.ManualContainer"/>的容器上时有用。
            </para>
            </summary>
            <param name="fromType">注册类型</param>
            <param name="toType">实例类型</param>
        </member>
        <member name="T:TouchSocket.Core.AddTransientInjectAttribute">
            <summary>
            添加瞬态注入。
            <para>
            该标签仅添加在继承<see cref="T:TouchSocket.Core.ManualContainer"/>的容器上时有用。
            </para>
            </summary>
        </member>
        <member name="M:TouchSocket.Core.AddTransientInjectAttribute.#ctor(System.Type,System.Type,System.String)">
            <summary>
            添加瞬态注入。
            <para>
            该标签仅添加在继承<see cref="T:TouchSocket.Core.ManualContainer"/>的容器上时有用。
            </para>
            </summary>
            <param name="fromType">注册类型</param>
            <param name="toType">实例类型</param>
            <param name="key">注册额外键</param>
        </member>
        <member name="M:TouchSocket.Core.AddTransientInjectAttribute.#ctor(System.Type)">
            <summary>
            添加瞬态注入。
            <para>
            该标签仅添加在继承<see cref="T:TouchSocket.Core.ManualContainer"/>的容器上时有用。
            </para>
            </summary>
            <param name="type">注册类型与实例类型一致</param>
        </member>
        <member name="M:TouchSocket.Core.AddTransientInjectAttribute.#ctor(System.Type,System.Type)">
            <summary>
            添加瞬态注入。
            <para>
            该标签仅添加在继承<see cref="T:TouchSocket.Core.ManualContainer"/>的容器上时有用。
            </para>
            </summary>
            <param name="fromType">注册类型</param>
            <param name="toType">实例类型</param>
        </member>
        <member name="T:TouchSocket.Core.FastSerializableAttribute">
            <summary>
            标识源生成Fast序列化相关的实现。
            </summary>
        </member>
        <member name="T:TouchSocket.Core.GeneratorPackageAttribute">
            <summary>
            标识源生成<see cref="T:TouchSocket.Core.IPackage"/>的实现。
            </summary>
        </member>
        <member name="T:TouchSocket.Core.PackageMemberAttribute">
            <summary>
            标识源生成<see cref="T:TouchSocket.Core.IPackage"/>成员的特性。
            </summary>
        </member>
        <member name="P:TouchSocket.Core.PackageMemberAttribute.Behavior">
            <summary>
            生成行为。一般来说，对于非只读、非重写、且同时拥有get，set（可以私有）访问器的属性，会自动生成。
            对于字段，均不会自动生成。所以可以使用该设置，来指示生成器的生成行为。
            </summary>
        </member>
        <member name="T:TouchSocket.Core.GeneratorPluginAttribute">
            <summary>
            使用源生成插件的调用。
            </summary>
        </member>
        <member name="M:TouchSocket.Core.GeneratorPluginAttribute.#ctor(System.Type)">
            <summary>
            使用源生成插件的调用。
            </summary>
            <param name="pluginType">插件名称，一般建议使用<see langword="typeof"/>解决。</param>
        </member>
    </members>
</doc>
